/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k)
    {
        if (head == nullptr || head->next == nullptr)
            return head;
        
        int size = 1;
        ListNode* newHead = head;
        
        while (head->next)
        {
            head = head->next;
            size++;
        }
        
        while (k > size)
        {
            k -= size;
        }
        if (k == size) {
            return newHead;
        }
        
        head->next = newHead;
        head = newHead;    

        while ((size - 1) != k)
        {
            head = head->next;
            size--;
        }
        newHead = head->next;
        head->next = nullptr;
        
        return newHead;
    }
};
